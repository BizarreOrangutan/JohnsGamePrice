services:
  price-fetcher:
    build: 
      context: ./price-fetcher
      target: runtime
    environment:
      - API_KEY=${API_KEY}
      - PORT=8000
    ports:
      - "8000:8000" 
    restart: unless-stopped
    networks:
      - john-network

  api-gateway:
    build: 
      context: ./api-gateway
      target: runtime
    ports:
      - "8080:8080"
    environment:
      - PORT=8080
      - PRICE_FETCHER_SERVICE_URL=http://price-fetcher:8000
      - LOG_LEVEL=info
      - REDIS_URL=redis://redis:6379
    depends_on:
      - price-fetcher
      - redis
    restart: unless-stopped
    networks:
      - john-network

  web:
    build: 
      context: ./web
      target: runtime
    ports:
      - "3000:3000" 
    environment:
      - PORT=3000
      - VITE_API_URL=http://localhost:8080 
    depends_on:
      - api-gateway
    networks:
      - john-network

  redis:
    image: redis:7
    ports:
      - "6379:6379"
    restart: unless-stopped
    networks:
      - john-network

  tester:
    image: curlimages/curl:latest
    depends_on:
      - api-gateway
      - price-fetcher
      - redis
    networks:
      - john-network
    entrypoint: [ "sleep", "infinity" ]

  loki:
    image: grafana/loki:2.9.7
    ports:
      - "3100:3100"
    command: -config.file=/etc/loki/local-config.yaml
    networks:
      - john-network

  promtail:
    image: grafana/promtail:2.9.7
    volumes:
      - /var/lib/docker/containers:/var/lib/docker/containers:ro
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - ./promtail-config.yml:/etc/promtail/config.yml
    command: -config.file=/etc/promtail/config.yml
    networks:
      - john-network
    depends_on:
      - loki

  grafana:
    image: grafana/grafana:10.4.2
    ports:
      - "3001:3000"
    volumes:
      - grafana-data:/var/lib/grafana
    networks:
      - john-network
    depends_on:
      - loki

networks:
  john-network:
    driver: bridge
    name: johns-game-price-network

volumes:
  grafana-data: